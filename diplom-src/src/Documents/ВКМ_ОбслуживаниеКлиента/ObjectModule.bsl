

#Область ОбработчикиСобытий 

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// ВКМ Начало доработки
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентОтРабот КАК ПроцентОтРабот
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&ДатаДокумента, ВКМ_Сотрудник = &ВКМ_Сотрудник) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("ВКМ_Сотрудник", ВКМ_Специалист);
	
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Если РезультатЗапроса.Пустой() Тогда 
		Сообщить("Не установлены условия оплаты сотрудника: " + ВКМ_Специалист);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий(); 
	
	Если ТипЗнч(Выборка.ПроцентОтРабот) = Тип("Булево") И 
		Выборка.ПроцентОтРабот = Ложь Тогда
		Сообщить("Не установлен процент в условиях оплаты сотрудника: " + ВКМ_Специалист);
		Отказ = Истина;
		Возврат;
	Иначе
		ПроцентОтРабот = Выборка.ПроцентОтРабот;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка,
	|	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВидДоговора,
	|	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_ДатаНачалаДействияДоговора КАК ДатаНач,
	|	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_ДатаОкончанияДействияДоговора КАК ДатаОкон,
	|	ВКМ_ОбслуживаниеКлиента.Дата
	|		МЕЖДУ ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_ДатаНачалаДействияДоговора и ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_ДатаОкончанияДействияДоговора
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
	|	И ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВидДоговора = &ВидДоговора";
	
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Если РезультатЗапроса.Пустой() Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор КАК ВКМ_Договор,
	|	ДоговорыКонтрагентов.Наименование КАК Наименование,
	|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
	|	ВКМ_ОбслуживаниеКлиентаВКМ_ВыполнениеРабот.ВКМ_ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента.ВКМ_ВыполнениеРабот КАК ВКМ_ОбслуживаниеКлиентаВКМ_ВыполнениеРабот
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ПО (ВКМ_ОбслуживаниеКлиента.ВКМ_Договор = ДоговорыКонтрагентов.Ссылка)
	|		ПО (ВКМ_ОбслуживаниеКлиентаВКМ_ВыполнениеРабот.Ссылка = ВКМ_ОбслуживаниеКлиента.Ссылка)
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
	|	И ВКМ_ОбслуживаниеКлиентаВКМ_ВыполнениеРабот.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Движения.ВКМ_ВыполнениеКлиентуРаботы.Записывать = Истина; 
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ВыполнениеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.ВКМ_Клиент = ВКМ_Клиент;
		Движение.ВКМ_Договор = ВКМ_Договор;
		Движение.ВКМ_КоличествоЧасов = ВыборкаДетальныеЗаписи.ЧасыКОплатеКлиенту;
		Движение.ВКМ_СуммаКОплате = Движение.ВКМ_КоличествоЧасов * ВыборкаДетальныеЗаписи.СтоимостьЧасаРаботы;
		
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.ВКМ_Сотрудник = ВКМ_Специалист;
		Движение.ВКМ_ЧасовКОплате = ВыборкаДетальныеЗаписи.ЧасыКОплатеКлиенту;
		Если ПроцентОтРабот > 0 Тогда
			Движение.ВКМ_СуммаКОплате = ВыборкаДетальныеЗаписи.ЧасыКОплатеКлиенту
			* ВыборкаДетальныеЗаписи.СтоимостьЧасаРаботы * ПроцентОтРабот / 100; 
		Иначе
			Движение.ВКМ_СуммаКОплате = 0;
		КонецЕсли;
	КонецЦикла;
	// ВКМ Конец докработки
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	// ВКМ Начало доработки
	Если ВКМ_НеобходимоСоздатьЗаписьВСправочник() Тогда
		
		НоваяЗапись = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НоваяЗапись.ТекстСообщения = "Документ изменен: " + Ссылка;
		НоваяЗапись.Записать();
		
		СообщениеВГруппу = СтрШаблон("Создан документ Обслуживание клиента № %1 от %2. Специалист: %3",
		Номер, Дата, ВКМ_Специалист);
		ВКМ_ОбщийМодульСервер.ВКМ_ОтправкаСообщенийВТелеграмм(СообщениеВГруппу);
		
	КонецЕсли;
	// ВКМ Конец докработки
	
КонецПроцедуры

// ВКМ Начало доработки
Функция ВКМ_НеобходимоСоздатьЗаписьВСправочник()
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить("ВКМ_Специалист"); 
	МассивРеквизитов.Добавить("ВКМ_ДатаПроведенияРабот");
	МассивРеквизитов.Добавить("ВКМ_ВремяНачалаРаботПлан");
	МассивРеквизитов.Добавить("ВКМ_ВремяОкончанияРаботПлан");
	
	СтруктураДанных = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, МассивРеквизитов);
	
	Если ЭтоНовый() Тогда
		Возврат Истина;
	ИначеЕсли СтруктураДанных.ВКМ_Специалист <> ВКМ_Специалист Тогда
		Возврат Истина;
	ИначеЕсли СтруктураДанных.ВКМ_ДатаПроведенияРабот <> ВКМ_ДатаПроведенияРабот Тогда 
		Возврат Истина;
	ИначеЕсли СтруктураДанных.ВКМ_ВремяНачалаРаботПлан <> ВКМ_ВремяНачалаРаботПлан Тогда
		Возврат Истина;
	ИначеЕсли СтруктураДанных.ВКМ_ВремяОкончанияРаботПлан <> ВКМ_ВремяОкончанияРаботПлан Тогда
        Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
		
КонецФункции
// ВКМ Конец докработки

#КонецОбласти