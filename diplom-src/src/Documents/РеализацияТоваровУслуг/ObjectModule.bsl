
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
	// ВКМ Начало доработки
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		ВКМ_ВыполнитьАвтозаполнение(ДанныеЗаполнения);
	КонецЕсли;
	// ВКМ Конец докработки
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	// ВКМ Начало доработки 
	Для Каждого ТекСтрокаТовары Из Услуги Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	// ВКМ Конец докработки

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

// ВКМ Начало доработки
Процедура ВКМ_ВыполнитьАвтозаполнение(ДанныеЗаполнения) Экспорт 
	
	Если ДанныеЗаполнения <> Неопределено Тогда 
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), ДанныеЗаполнения);
		Возврат;
	КонецЕсли;

	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить(); 
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	ПустаяСсылка = Справочники.Номенклатура.ПустаяСсылка();
	
	Если НоменклатураАбонентскаяПлата = ПустаяСсылка Или
		НоменклатураРаботыСпециалиста = ПустаяСсылка Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнена одна из констант:
		| НоменклатураАбонентскаяПлата или НоменклатураРаботыСпециалиста";
		Сообщение.Сообщить();
		Услуги.Очистить();
		Возврат;	
	КонецЕсли; 
	
	Структура = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты");

	Если Структура.ВКМ_СуммаАбонентскойПлаты = 0 Тогда
		 НоваяСтрока = Услуги.Добавить();
		 НоваяСтрока.Номенклатура = НоменклатураАбонентскаяПлата;
		 НоваяСтрока.Сумма = Структура.ВКМ_СуммаАбонентскойПлаты; 
	 КонецЕсли; 
	 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Договор
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	&ДатаДокумента МЕЖДУ ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора И ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора
	|	И ДоговорыКонтрагентов.Ссылка = &Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВыполнениеКлиентуРаботы.ВКМ_КоличествоЧасовОборот) КАК Количество,
	|	СУММА(ВыполнениеКлиентуРаботы.ВКМ_СуммаКОплатеОборот) КАК Сумма,
	|	ВыполнениеКлиентуРаботы.ВКМ_Договор КАК ВКМ_Договор
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполнениеКлиентуРаботы.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			ВКМ_Договор В
	|				(ВЫБРАТЬ
	|					ВТ_Договор.Ссылка
	|				ИЗ
	|					ВТ_Договор)) КАК ВыполнениеКлиентуРаботы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыполнениеКлиентуРаботы.ВКМ_Договор";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Договор", Договор);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	Иначе
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий(); 
		
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураРаботыСпециалиста;
		НоваяСтрока.Сумма = Выборка.Сумма;
		НоваяСтрока.Количество = Выборка.Количество;  
		
	КонецЕсли; 	 
	 
КонецПроцедуры

// ВКМ Конец докработки

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// ВКМ Начало доработки 
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Отказ = Истина;
		Сообщить("Не заполнен контрагент"); 
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Договор) Тогда
		Отказ = Истина;
		Сообщить("Не заполнен договор"); 
	КонецЕсли;
	// ВКМ Конец докработки
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
